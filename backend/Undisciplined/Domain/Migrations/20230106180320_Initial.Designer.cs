// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Undisciplined.Domain;

#nullable disable

namespace Undisciplined.Domain.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230106180320_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Undisciplined.Domain.CompletableObjective", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("ObjectiveId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ReminderId")
                        .HasColumnType("uuid");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ObjectiveId");

                    b.HasIndex("ReminderId");

                    b.ToTable("CompletableObjectives");
                });

            modelBuilder.Entity("Undisciplined.Domain.Objective", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("TaskId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("TaskId");

                    b.ToTable("Objectives");
                });

            modelBuilder.Entity("Undisciplined.Domain.Reminder", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("OccursAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<Guid>("TaskId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("TaskId");

                    b.ToTable("Reminders");
                });

            modelBuilder.Entity("Undisciplined.Domain.Task", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<double>("ExpiresAfter")
                        .HasColumnType("double precision");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<TimeOnly>("StartsAt")
                        .HasColumnType("time without time zone");

                    b.HasKey("Id");

                    b.ToTable("Tasks");
                });

            modelBuilder.Entity("Undisciplined.Domain.CompletableObjective", b =>
                {
                    b.HasOne("Undisciplined.Domain.Objective", "Objective")
                        .WithMany()
                        .HasForeignKey("ObjectiveId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Undisciplined.Domain.Reminder", null)
                        .WithMany("Objectives")
                        .HasForeignKey("ReminderId");

                    b.Navigation("Objective");
                });

            modelBuilder.Entity("Undisciplined.Domain.Objective", b =>
                {
                    b.HasOne("Undisciplined.Domain.Task", null)
                        .WithMany("Objectives")
                        .HasForeignKey("TaskId");
                });

            modelBuilder.Entity("Undisciplined.Domain.Reminder", b =>
                {
                    b.HasOne("Undisciplined.Domain.Task", "Task")
                        .WithMany("Reminders")
                        .HasForeignKey("TaskId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Task");
                });

            modelBuilder.Entity("Undisciplined.Domain.Reminder", b =>
                {
                    b.Navigation("Objectives");
                });

            modelBuilder.Entity("Undisciplined.Domain.Task", b =>
                {
                    b.Navigation("Objectives");

                    b.Navigation("Reminders");
                });
#pragma warning restore 612, 618
        }
    }
}
